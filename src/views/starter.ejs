<!DOCTYPE html>
<html>

<head>
  <title></title>
  <!-- <link rel="stylesheet" type="text/css" href="/styles/main.css" /> -->
  <%include ../../partials/head%>
  <link rel="stylesheet" type="text/css" href="/styles/starter.css" />

</head>
<header>
  <%include ../../partials/header%>
</header>

<body>

  <main>
    <div class="side">

      <div class="panel">
        <textarea class="text" rows="20" cols="7" id="comandos" placeholder="Definicion de la red como: H1:S1"></textarea>
        <div class="buttons">
          <button type="button" name="button" onclick="startvsorc()">Iniciar VSoRC</button>
          <button type="button" name="button" onclick="stopvsorc()">Detener VSoRC</button>
          <button type="button" name="button" onclick="startcontroller()">Iniciar controlador</button>
          <button type="button" name="button" onclick="stopcontroller()">Detener controlador</button>
        </div>
      </div>

      <div class="panel">
        <textarea class="text" disabled rows="20" cols="7" id="vsorcout" placeholder="Salida del sistema de consola"></textarea>
        <div class="buttons">
          <button type="button" name="button" onclick="startvsorc()">Ping all</button>
          <button type="button" name="button" onclick="stopvsorc()">Placement</button>
          <button type="button" name="button" onclick="startcontroller()">Iperf3</button>
        </div>
      </div>

    </div>

    <div class="side">

      <div class="panel">
        <textarea class="text" disabled rows="20" cols="7" id="vsorcout" placeholder="Salida del controlador"></textarea>
      </div>

      <div class="panel">

      </div>

    </div>

    <script type="text/javascript">
      let topo = document.getElementById('comandos') //Donde van escrito el DSL



      function stopcontroller() {
        let xhr = new XMLHttpRequest();
        xhr.open('GET', '/stopcontroller', true);
        xhr.onload = function() {
          if (xhr.status == 200) { //can use this.status instead
            //console.log(xhr.responseText);// para ver en la consola
            console.log("controller stoped");
          }
        }
        xhr.send();

      }

      function startcontroller() {
        let xhr = new XMLHttpRequest();
        xhr.open('GET', '/startcontroller', true);
        //console.log(xhr); //para ver en la consola
        xhr.onload = function() {
          if (xhr.status == 200) { //can use this.status instead

            console.log("controller started");
          }
        }
        xhr.send();
      }

      function startvsorc() {
        let xhr = new XMLHttpRequest();
        topology = JSON.stringify(topo.value)
        xhr.open('GET', '/startvsorc?topology=' + topology, true);
        xhr.onload = function() {
          if (xhr.status == 200) { //can use this.status instead
            //console.log(xhr.responseText);// para ver en la consola
            console.log("vsorc started");
          }
        }

        xhr.send();

      }

      function stopvsorc() {
        let xhr = new XMLHttpRequest();
        xhr.open('GET', '/stopvsorc', true);
        xhr.onload = function() {
          if (xhr.status == 200) { //can use this.status instead
            //console.log(xhr.responseText);// para ver en la consola
            console.log("vsorc stopped");
          }
        }
        xhr.send();
      }
    </script>
  </main>
</body>
<footer>
  <%include ../../partials/footer%>
</footer>


</html>